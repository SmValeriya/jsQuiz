/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts/common/questions.js":
/*!*****************************************!*\
  !*** ./src/scripts/common/questions.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "questions": function() { return /* binding */ questions; }
/* harmony export */ });
const questions = [
  {
    id: 1,
    question: 'new Array(5).toString();',
    answer: ',,,,',
    options: ['[]', '"[]"', ',,,,', '[,,,,]'],
  },
  {
    id: 2,
    question: '(true + false) > 2 + true',
    answer: 'false',
    options: ['true', 'false', 'TypeError', 'NaN'],
  },
  {
    id: 3,
    question: 'new String("This is a string") instanceof String',
    answer: 'true',
    options: ['true', 'false', 'TypeError', 'ReferenceError'],
  },
  {
    id: 4,
    question: 'NaN === NaN',
    answer: 'false',
    options: ['true', 'false', 'TypeError', 'undefined'],
  },
  {
    id: 5,
    question: 'How do you locate the first X in a string?',
    answer: 'using indexOf() function',
    options: [
      'using find function',
      'using locate function',
      'using indexOf() function',
      'using countTo() function',
    ],
  },
  {
    id: 6,
    question: 'How can you reference part of a string?',
    answer: 'text.substr(5,6)',
    options: [
      'text.substr(5,6)',
      'text.part(5,6)',
      'text.piece(5,6)',
      'text.split(5,6)',
    ],
  },
  {
    id: 7,
    question: 'Which event is triggered when a field loses the focus?',
    answer: 'onblur',
    options: ['onmouseout', 'onblur', 'onunfocus', 'onkeyup'],
  },
  {
    id: 8,
    question: 'What language defines the behavior of a web page',
    answer: 'Javascript',
    options: ['HTML', 'CSS', 'XML', 'Javascript'],
  },
  {
    id: 9,
    question:
      'Which of the following method is used to evaluate a string of Javascript code in the context of the specified object?',
    answer: 'Eval',
    options: ['Eval', 'ParseDoule', 'ParseObject', 'Efloat'],
  },
  {
    id: 10,
    question: 'What is 12%5',
    answer: '2',
    options: ['7', '2', '60', '17'],
  },
];


/***/ }),

/***/ "./src/scripts/common/quiz.js":
/*!************************************!*\
  !*** ./src/scripts/common/quiz.js ***!
  \************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initializeQuiz": function() { return /* binding */ initializeQuiz; },
/* harmony export */   "questionIndex": function() { return /* binding */ questionIndex; },
/* harmony export */   "rightAnswersCount": function() { return /* binding */ rightAnswersCount; },
/* harmony export */   "showNextQuestion": function() { return /* binding */ showNextQuestion; },
/* harmony export */   "showQuestionResult": function() { return /* binding */ showQuestionResult; }
/* harmony export */ });
/* harmony import */ var _questions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./questions.js */ "./src/scripts/common/questions.js");


const quizBox = document.querySelector('.quiz');
let shuffledQuestions = [];
const nextBtn = quizBox.querySelector('.quiz__btn-next');
let rightAnswersCount = 0;
let questionIndex;

function initializeQuiz() {
  const quizCountBox = quizBox.querySelector('.quiz__que-count');

  questionIndex = 0;
  rightAnswersCount = 0;
  shuffledQuestions = shuffleArray(_questions_js__WEBPACK_IMPORTED_MODULE_0__.questions);
  quizCountBox.textContent = ` ${shuffledQuestions.length} `;
  quizBox.querySelector('.quiz__btn-result').style.display = 'none';
  renderQuestion(questionIndex);
  updateCountCurrentQuestion();
}

function renderQuestion(index) {
  const questionText = quizBox.querySelector('.quiz__question');
  const questionOptList = quizBox.querySelector('.quiz__ans-list');
  const questionOptFragment = new DocumentFragment();

  questionOptList.classList.remove('disable');

  questionText.textContent =
    index + 1 + '. ' + shuffledQuestions[index].question;

  shuffledQuestions[index].options = shuffleArray(
    shuffledQuestions[index].options,
  );
  questionOptList.textContent = '';

  shuffledQuestions[index].options.forEach(option => {
    const li = document.createElement('li');
    li.classList.add('quiz__ans-list-item');
    li.textContent = option;
    questionOptFragment.appendChild(li);
  });

  questionOptList.appendChild(questionOptFragment);
  disableNextBtn();
}

function showNextQuestion() {
  questionIndex++;
  renderQuestion(questionIndex);
  updateCountCurrentQuestion();
}

function showQuestionResult(element) {
  const questionOptList = quizBox.querySelector('.quiz__ans-list');

  questionOptList.classList.add('disable');

  if (questionIndex < shuffledQuestions.length - 1) {
    activeNextBtn();
  }

  if (questionIndex === shuffledQuestions.length - 1) {
    quizBox.querySelector('.quiz__btn-result').style.display = 'block';
  }

  if (element?.textContent === shuffledQuestions[questionIndex].answer) {
    element.classList.add('correct');
    rightAnswersCount++;
    return;
  }

  element?.classList.add('incorrect');
  const optionsElemList = quizBox.querySelectorAll('.quiz__ans-list-item');
  optionsElemList.forEach(option => {
    if (option.textContent === shuffledQuestions[questionIndex].answer) {
      option.classList.add('correct');
    }
  });
}

function updateCountCurrentQuestion() {
  const currentQuestionBox = quizBox.querySelector('.quiz__que-passed');
  currentQuestionBox.textContent = questionIndex + 1 + ' ';
}

function disableNextBtn() {
  nextBtn.style.display = 'none';
}

function activeNextBtn() {
  nextBtn.style.display = 'block';
}

function shuffleArray(array) {
  const shuffledArray = [];

  while (shuffledArray.length < array.length) {
    const random = array[Math.floor(Math.random() * array.length)];
    if (!shuffledArray.includes(random)) {
      shuffledArray.push(random);
    }
  }

  return shuffledArray;
}


/***/ }),

/***/ "./src/scripts/common/result.js":
/*!**************************************!*\
  !*** ./src/scripts/common/result.js ***!
  \**************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "renderResults": function() { return /* binding */ renderResults; }
/* harmony export */ });
/* harmony import */ var _questions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./questions.js */ "./src/scripts/common/questions.js");


const resultText = [
  `and congrats! ${String.fromCodePoint(0x1f60e)}, You got`,
  `and nice ${String.fromCodePoint(0x1f609)}, You got`,
  `and sorry ${String.fromCodePoint(0x1f622)}, You got only`,
];

const resultTextBox = document.querySelector('.result__score');

function renderResults(score) {
  const scoreInPercent = Math.floor((score * 100) / _questions_js__WEBPACK_IMPORTED_MODULE_0__.questions.length);
  let message = '';
  if (scoreInPercent > 75) {
    message += resultText[0];
  } else if (scoreInPercent > 40) {
    message += resultText[1];
  } else {
    message += resultText[2];
  }

  message += ` ${score}  out of ${_questions_js__WEBPACK_IMPORTED_MODULE_0__.questions.length}`;

  resultTextBox.textContent = message;
}


/***/ }),

/***/ "./src/scripts/common/theme.js":
/*!*************************************!*\
  !*** ./src/scripts/common/theme.js ***!
  \*************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initializeTheme": function() { return /* binding */ initializeTheme; },
/* harmony export */   "toggleTheme": function() { return /* binding */ toggleTheme; }
/* harmony export */ });
function setTheme(themeName = '') {
  localStorage.setItem('theme', themeName);
  document.body.className = themeName;
}

function toggleTheme() {
  if (localStorage.getItem('theme') === 'dark') {
    setTheme();
  } else {
    setTheme('dark');
  }
}

function initializeTheme() {
  if ('theme' in localStorage) {
    setTheme(localStorage.getItem('theme'));
    return;
  }

  const isDarkMode = () =>
    window.matchMedia &&
    window.matchMedia('(prefers-color-scheme: dark)').matches;

  if (isDarkMode) {
    setTheme('dark');
    return;
  }

  setTheme();
}


/***/ }),

/***/ "./src/scripts/common/timer.js":
/*!*************************************!*\
  !*** ./src/scripts/common/timer.js ***!
  \*************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "startTimer": function() { return /* binding */ startTimer; },
/* harmony export */   "stopTimer": function() { return /* binding */ stopTimer; }
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index.js */ "./src/scripts/index.js");


const timeCount = document.querySelector('.timer__time');
const event = new Event('timeup');
const timerTextBox = document.querySelector('.timer__text');
const timeLine = document.querySelector('.quiz__timeline ');
const timeLineWidth = document.querySelector('.quiz__header').offsetWidth;
let counter;
let timeValue = null;
let counterTime = null;

function startTimer() {
  timerTextBox.textContent = 'Time Left';
  timeValue = _index_js__WEBPACK_IMPORTED_MODULE_0__.initialTime;
  timeCount.textContent = timeValue;
  counterTime = _index_js__WEBPACK_IMPORTED_MODULE_0__.initialTime * 100;
  counter = setInterval(() => {
    --counterTime;
    if (counterTime % 100 === 0) {
      --timeValue;
      let time = timeValue;
      if (timeValue < 10) {
        time = '0' + timeValue;
      }

      timer(time);
    }

    frame(counterTime);
    if (timeValue === 0) {
      timerTextBox.textContent = 'Time Off';
      stopTimer();
      document.dispatchEvent(event);
    }
  }, 10);
}

function stopTimer() {
  clearInterval(counter);
}

function timer(time) {
  timeCount.textContent = time;
}

function frame(time) {
  timeLine.style.width =
    ((_index_js__WEBPACK_IMPORTED_MODULE_0__.initialTime * 100 - time) * timeLineWidth) / _index_js__WEBPACK_IMPORTED_MODULE_0__.initialTime / 100 + 'px';
}


/***/ }),

/***/ "./src/scripts/index.js":
/*!******************************!*\
  !*** ./src/scripts/index.js ***!
  \******************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initialTime": function() { return /* binding */ initialTime; }
/* harmony export */ });
/* harmony import */ var _common_theme_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/theme.js */ "./src/scripts/common/theme.js");
/* harmony import */ var _common_quiz_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/quiz.js */ "./src/scripts/common/quiz.js");
/* harmony import */ var _common_result_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/result.js */ "./src/scripts/common/result.js");
/* harmony import */ var _common_questions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/questions.js */ "./src/scripts/common/questions.js");
/* harmony import */ var _common_timer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/timer.js */ "./src/scripts/common/timer.js");






const greetingBox = document.querySelector('.greeting');
const infoBox = document.querySelector('.info');
const quizBox = document.querySelector('.quiz');
const resultBox = document.querySelector('.result');
const initialTime = 15;

document.addEventListener('DOMContentLoaded', function () {
  (0,_common_theme_js__WEBPACK_IMPORTED_MODULE_0__.initializeTheme)();
  document.addEventListener('click', function (e) {
    if (e.target.closest('.mode')) {
      (0,_common_theme_js__WEBPACK_IMPORTED_MODULE_0__.toggleTheme)();
    }
  });

  greetingBox.addEventListener('click', function (e) {
    if (e.target.closest('.greeting__btn')) {
      greetingBox.classList.remove('active');
      infoBox.classList.add('active');
    }
  });

  infoBox.addEventListener('click', function (e) {
    if (e.target.closest('.info__btn-quit')) {
      infoBox.classList.remove('active');
      greetingBox.classList.add('active');
    }

    if (e.target.closest('.info__btn-start')) {
      infoBox.classList.remove('active');
      quizBox.classList.add('active');
      (0,_common_quiz_js__WEBPACK_IMPORTED_MODULE_1__.initializeQuiz)();
      (0,_common_timer_js__WEBPACK_IMPORTED_MODULE_4__.startTimer)();
    }
  });

  quizBox.addEventListener('click', function (e) {
    if (
      e.target.closest('.quiz__btn-next') &&
      _common_questions_js__WEBPACK_IMPORTED_MODULE_3__.questions.length - 1 > _common_quiz_js__WEBPACK_IMPORTED_MODULE_1__.questionIndex
    ) {
      (0,_common_timer_js__WEBPACK_IMPORTED_MODULE_4__.stopTimer)();
      (0,_common_quiz_js__WEBPACK_IMPORTED_MODULE_1__.showNextQuestion)();
      (0,_common_timer_js__WEBPACK_IMPORTED_MODULE_4__.startTimer)();
    }

    if (e.target.closest('.quiz__ans-list-item')) {
      (0,_common_timer_js__WEBPACK_IMPORTED_MODULE_4__.stopTimer)();
      (0,_common_quiz_js__WEBPACK_IMPORTED_MODULE_1__.showQuestionResult)(e.target);
    }

    if (e.target.closest('.quiz__btn-result')) {
      quizBox.classList.remove('active');
      (0,_common_result_js__WEBPACK_IMPORTED_MODULE_2__.renderResults)(_common_quiz_js__WEBPACK_IMPORTED_MODULE_1__.rightAnswersCount);
      resultBox.classList.add('active');
    }
  });

  resultBox.addEventListener('click', function (e) {
    if (e.target.closest('.result__btn-quit')) {
      resultBox.classList.remove('active');
      greetingBox.classList.add('active');
    }

    if (e.target.closest('.result__btn-start')) {
      resultBox.classList.remove('active');
      quizBox.classList.add('active');
      (0,_common_quiz_js__WEBPACK_IMPORTED_MODULE_1__.initializeQuiz)();
      (0,_common_timer_js__WEBPACK_IMPORTED_MODULE_4__.startTimer)();
    }
  });
});

document.addEventListener('timeup', function () {
  (0,_common_quiz_js__WEBPACK_IMPORTED_MODULE_1__.showQuestionResult)(null);
});


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/scripts/index.js");
/******/ 	
/******/ })()
;
//# sourceMappingURL=index.min.js.map